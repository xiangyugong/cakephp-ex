---
kind: Template
apiVersion: v1
metadata:
  name: cakephp-example-namespaces
  annotations:
    openshift.io/display-name: CakePHP Namespaces
    description: >-
      Namespaces for a CakePHP example deployment across multiple namespaces.
      For more information about using this template, including OpenShift
      considerations, see
      https://github.com/xiangyugong/cakephp-ex/blob/master/README.md.
    tags: quickstart,php,cakephp
    iconClass: icon-php
    openshift.io/long-description: >-
      This template defines namespaces for a CakePHP application OpenShift
      build and deployment with separate namespaces for build, frontend, and
      database deployment. This template requires cluster-admin privileges.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/documentation-url: https://github.com/xiangyugong/cakephp-ex
    template.openshift.io/bindable: 'false'
message: |-
  The following namespaces have been configured: ${BUILD_NAMESPACE}, ${FRONTEND_NAMESPACE}, ${DATABASE_NAMESPACE}

  For more information about using this template, including OpenShift considerations, see https://github.com/xiangyugong/cakephp-ex/blob/master/README.md.
labels:
  template: cakephp-example-namespaces
  app: cakephp-example
parameters:
- name: BUILD_NAMESPACE
  displayName: Build Namespace
  description: >-
    The OpenShift Namespace where the ImageStream and BuildConfig reside.
  required: true
  value: cakephp-example-build
- name: FRONTEND_NAMESPACE
  displayName: Frontend Namespace
  description: >-
    The OpenShift Namespace where the Frontend application deployment, route,
    and service reside.
  required: true
  value: cakephp-example-frontend
- name: DATABASE_NAMESPACE
  displayName: Database Namespace
  description: >-
    The OpenShift Namespace where the Database deployment and service reside.
  required: true
  value: cakephp-example-database
objects:
- kind: Namespace
  apiVersion: v1
  metadata:
    name: ${BUILD_NAMESPACE}
- kind: Namespace
  apiVersion: v1
  metadata:
    name: ${FRONTEND_NAMESPACE}
- kind: Namespace
  apiVersion: v1
  metadata:
    name: ${DATABASE_NAMESPACE}
